// Copyright (c) 2020, the Koka-Community authors. All rights reserved. 
// Use of this source code is governed by a
// MIT-style license that can be found in the LICENSE file.

// AUTO GENERATED FILE, DO NOT EDIT.
// 
// Generated by `ffigen`.

import std/core/cextern
import std/num/int32
import std/num/int64
import std/num/float64

extern import
  c { vcpkg="llhttp" }

pub extern external/llhttp-init(^parser: c-pointer<llhttp--internal-s-c>, ^type1: int32, ^settings: c-pointer<llhttp-settings-s-c>): ()
  c inline "(void)llhttp_init((llhttp_t*)#1, (int32_t)#2, (llhttp_settings_t*)#3)"

pub inline fun ffi/llhttp-init(^parser: c-pointer<llhttp--internal-s-c>, ^type1: llhttp-type, ^settings: c-pointer<llhttp-settings-s-c>): <exn> ()
  external/llhttp-init(parser, type1.llhttp-type/int, settings)

pub extern external/llhttp-alloc(^type1: int32): c-pointer<llhttp--internal-s-c>
  c inline "(intptr_t)llhttp_alloc((int32_t)#1)"

pub inline fun ffi/llhttp-alloc(^type1: llhttp-type): <exn> c-pointer<llhttp--internal-s-c>
  external/llhttp-alloc(type1.llhttp-type/int)

pub extern external/llhttp-free(^parser: c-pointer<llhttp--internal-s-c>): ()
  c inline "(void)llhttp_free((llhttp_t*)#1)"

pub extern external/llhttp-get-type(^parser: c-pointer<llhttp--internal-s-c>): int8
  c inline "(uint8_t)llhttp_get_type((llhttp_t*)#1)"

pub inline fun ffi/llhttp-get-type(^parser: c-pointer<llhttp--internal-s-c>): <> int
  external/llhttp-get-type(parser).int

pub extern external/llhttp-get-http-major(^parser: c-pointer<llhttp--internal-s-c>): int8
  c inline "(uint8_t)llhttp_get_http_major((llhttp_t*)#1)"

pub inline fun ffi/llhttp-get-http-major(^parser: c-pointer<llhttp--internal-s-c>): <> int
  external/llhttp-get-http-major(parser).int

pub extern external/llhttp-get-http-minor(^parser: c-pointer<llhttp--internal-s-c>): int8
  c inline "(uint8_t)llhttp_get_http_minor((llhttp_t*)#1)"

pub inline fun ffi/llhttp-get-http-minor(^parser: c-pointer<llhttp--internal-s-c>): <> int
  external/llhttp-get-http-minor(parser).int

pub extern external/llhttp-get-method(^parser: c-pointer<llhttp--internal-s-c>): int8
  c inline "(uint8_t)llhttp_get_method((llhttp_t*)#1)"

pub inline fun ffi/llhttp-get-method(^parser: c-pointer<llhttp--internal-s-c>): <> int
  external/llhttp-get-method(parser).int

pub extern external/llhttp-get-status-code(^parser: c-pointer<llhttp--internal-s-c>): int32
  c inline "(int)llhttp_get_status_code((llhttp_t*)#1)"

pub inline fun ffi/llhttp-get-status-code(^parser: c-pointer<llhttp--internal-s-c>): <> int
  external/llhttp-get-status-code(parser).int

pub extern external/llhttp-get-upgrade(^parser: c-pointer<llhttp--internal-s-c>): int8
  c inline "(uint8_t)llhttp_get_upgrade((llhttp_t*)#1)"

pub inline fun ffi/llhttp-get-upgrade(^parser: c-pointer<llhttp--internal-s-c>): <> int
  external/llhttp-get-upgrade(parser).int

pub extern external/llhttp-reset(^parser: c-pointer<llhttp--internal-s-c>): ()
  c inline "(void)llhttp_reset((llhttp_t*)#1)"

pub extern external/llhttp-settings-init(^settings: c-pointer<llhttp-settings-s-c>): ()
  c inline "(void)llhttp_settings_init((llhttp_settings_t*)#1)"

pub extern external/llhttp-execute(^parser: c-pointer<llhttp--internal-s-c>, ^data: c-pointer<int>, ^len: ssize_t): int32
  c inline "(int32_t)llhttp_execute((llhttp_t*)#1, (char*)#2, (size_t)#3)"

pub inline fun ffi/llhttp-execute(^parser: c-pointer<llhttp--internal-s-c>, ^data: c-pointer<int>, ^len: int): <exn> llhttp-errno
  external/llhttp-execute(parser, data, len.ssize_t).int/llhttp-errno

pub extern external/llhttp-finish1(^parser: c-pointer<llhttp--internal-s-c>): int32
  c inline "(int32_t)llhttp_finish((llhttp_t*)#1)"

pub inline fun ffi/llhttp-finish1(^parser: c-pointer<llhttp--internal-s-c>): <exn> llhttp-errno
  external/llhttp-finish1(parser).int/llhttp-errno

pub extern external/llhttp-message-needs-eof(^parser: c-pointer<llhttp--internal-s-c>): int32
  c inline "(int)llhttp_message_needs_eof((llhttp_t*)#1)"

pub inline fun ffi/llhttp-message-needs-eof(^parser: c-pointer<llhttp--internal-s-c>): <> int
  external/llhttp-message-needs-eof(parser).int

pub extern external/llhttp-should-keep-alive(^parser: c-pointer<llhttp--internal-s-c>): int32
  c inline "(int)llhttp_should_keep_alive((llhttp_t*)#1)"

pub inline fun ffi/llhttp-should-keep-alive(^parser: c-pointer<llhttp--internal-s-c>): <> int
  external/llhttp-should-keep-alive(parser).int

pub extern external/llhttp-pause(^parser: c-pointer<llhttp--internal-s-c>): ()
  c inline "(void)llhttp_pause((llhttp_t*)#1)"

pub extern external/llhttp-resume(^parser: c-pointer<llhttp--internal-s-c>): ()
  c inline "(void)llhttp_resume((llhttp_t*)#1)"

pub extern external/llhttp-resume-after-upgrade(^parser: c-pointer<llhttp--internal-s-c>): ()
  c inline "(void)llhttp_resume_after_upgrade((llhttp_t*)#1)"

pub extern external/llhttp-get-errno(^parser: c-pointer<llhttp--internal-s-c>): int32
  c inline "(int32_t)llhttp_get_errno((llhttp_t*)#1)"

pub inline fun ffi/llhttp-get-errno(^parser: c-pointer<llhttp--internal-s-c>): <exn> llhttp-errno
  external/llhttp-get-errno(parser).int/llhttp-errno

pub extern external/llhttp-get-error-reason(^parser: c-pointer<llhttp--internal-s-c>): c-pointer<int>
  c inline "(intptr_t)llhttp_get_error_reason((llhttp_t*)#1)"

pub extern external/llhttp-set-error-reason(^parser: c-pointer<llhttp--internal-s-c>, ^reason: c-pointer<int>): ()
  c inline "(void)llhttp_set_error_reason((llhttp_t*)#1, (char*)#2)"

pub extern external/llhttp-get-error-pos(^parser: c-pointer<llhttp--internal-s-c>): c-pointer<int>
  c inline "(intptr_t)llhttp_get_error_pos((llhttp_t*)#1)"

pub extern external/llhttp-errno-name(^err: int32): c-pointer<int>
  c inline "(intptr_t)llhttp_errno_name((int32_t)#1)"

pub inline fun ffi/llhttp-errno-name(^err: llhttp-errno): <exn> c-pointer<int>
  external/llhttp-errno-name(err.llhttp-errno/int)

pub extern external/llhttp-method-name(^method: int32): c-pointer<int>
  c inline "(intptr_t)llhttp_method_name((int32_t)#1)"

pub inline fun ffi/llhttp-method-name(^method: llhttp-method): <exn> c-pointer<int>
  external/llhttp-method-name(method.llhttp-method/int)

pub extern external/llhttp-status-name(^status: int32): c-pointer<int>
  c inline "(intptr_t)llhttp_status_name((int32_t)#1)"

pub inline fun ffi/llhttp-status-name(^status: llhttp-status): <exn> c-pointer<int>
  external/llhttp-status-name(status.llhttp-status/int)

pub extern external/llhttp-set-lenient-headers(^parser: c-pointer<llhttp--internal-s-c>, ^enabled: int32): ()
  c inline "(void)llhttp_set_lenient_headers((llhttp_t*)#1, (int)#2)"

pub inline fun ffi/llhttp-set-lenient-headers(^parser: c-pointer<llhttp--internal-s-c>, ^enabled: int): <> ()
  external/llhttp-set-lenient-headers(parser, enabled.int32)

pub extern external/llhttp-set-lenient-chunked-length(^parser: c-pointer<llhttp--internal-s-c>, ^enabled: int32): ()
  c inline "(void)llhttp_set_lenient_chunked_length((llhttp_t*)#1, (int)#2)"

pub inline fun ffi/llhttp-set-lenient-chunked-length(^parser: c-pointer<llhttp--internal-s-c>, ^enabled: int): <> ()
  external/llhttp-set-lenient-chunked-length(parser, enabled.int32)

pub extern external/llhttp-set-lenient-keep-alive(^parser: c-pointer<llhttp--internal-s-c>, ^enabled: int32): ()
  c inline "(void)llhttp_set_lenient_keep_alive((llhttp_t*)#1, (int)#2)"

pub inline fun ffi/llhttp-set-lenient-keep-alive(^parser: c-pointer<llhttp--internal-s-c>, ^enabled: int): <> ()
  external/llhttp-set-lenient-keep-alive(parser, enabled.int32)

pub extern external/llhttp-set-lenient-transfer-encoding(^parser: c-pointer<llhttp--internal-s-c>, ^enabled: int32): ()
  c inline "(void)llhttp_set_lenient_transfer_encoding((llhttp_t*)#1, (int)#2)"

pub inline fun ffi/llhttp-set-lenient-transfer-encoding(^parser: c-pointer<llhttp--internal-s-c>, ^enabled: int): <> ()
  external/llhttp-set-lenient-transfer-encoding(parser, enabled.int32)

pub extern external/llhttp-set-lenient-version(^parser: c-pointer<llhttp--internal-s-c>, ^enabled: int32): ()
  c inline "(void)llhttp_set_lenient_version((llhttp_t*)#1, (int)#2)"

pub inline fun ffi/llhttp-set-lenient-version(^parser: c-pointer<llhttp--internal-s-c>, ^enabled: int): <> ()
  external/llhttp-set-lenient-version(parser, enabled.int32)

pub extern external/llhttp-set-lenient-data-after-close(^parser: c-pointer<llhttp--internal-s-c>, ^enabled: int32): ()
  c inline "(void)llhttp_set_lenient_data_after_close((llhttp_t*)#1, (int)#2)"

pub inline fun ffi/llhttp-set-lenient-data-after-close(^parser: c-pointer<llhttp--internal-s-c>, ^enabled: int): <> ()
  external/llhttp-set-lenient-data-after-close(parser, enabled.int32)

pub extern external/llhttp-set-lenient-optional-lf-after-cr(^parser: c-pointer<llhttp--internal-s-c>, ^enabled: int32): ()
  c inline "(void)llhttp_set_lenient_optional_lf_after_cr((llhttp_t*)#1, (int)#2)"

pub inline fun ffi/llhttp-set-lenient-optional-lf-after-cr(^parser: c-pointer<llhttp--internal-s-c>, ^enabled: int): <> ()
  external/llhttp-set-lenient-optional-lf-after-cr(parser, enabled.int32)

pub extern external/llhttp-set-lenient-optional-cr-before-lf(^parser: c-pointer<llhttp--internal-s-c>, ^enabled: int32): ()
  c inline "(void)llhttp_set_lenient_optional_cr_before_lf((llhttp_t*)#1, (int)#2)"

pub inline fun ffi/llhttp-set-lenient-optional-cr-before-lf(^parser: c-pointer<llhttp--internal-s-c>, ^enabled: int): <> ()
  external/llhttp-set-lenient-optional-cr-before-lf(parser, enabled.int32)

pub extern external/llhttp-set-lenient-optional-crlf-after-chunk(^parser: c-pointer<llhttp--internal-s-c>, ^enabled: int32): ()
  c inline "(void)llhttp_set_lenient_optional_crlf_after_chunk((llhttp_t*)#1, (int)#2)"

pub inline fun ffi/llhttp-set-lenient-optional-crlf-after-chunk(^parser: c-pointer<llhttp--internal-s-c>, ^enabled: int): <> ()
  external/llhttp-set-lenient-optional-crlf-after-chunk(parser, enabled.int32)

pub extern external/llhttp-set-lenient-spaces-after-chunk-size(^parser: c-pointer<llhttp--internal-s-c>, ^enabled: int32): ()
  c inline "(void)llhttp_set_lenient_spaces_after_chunk_size((llhttp_t*)#1, (int)#2)"

pub inline fun ffi/llhttp-set-lenient-spaces-after-chunk-size(^parser: c-pointer<llhttp--internal-s-c>, ^enabled: int): <> ()
  external/llhttp-set-lenient-spaces-after-chunk-size(parser, enabled.int32)

type llhttp-errno
  HPE_OK
  HPE_INTERNAL
  HPE_STRICT
  HPE_CR_EXPECTED
  HPE_LF_EXPECTED
  HPE_UNEXPECTED_CONTENT_LENGTH
  HPE_UNEXPECTED_SPACE
  HPE_CLOSED_CONNECTION
  HPE_INVALID_METHOD
  HPE_INVALID_URL
  HPE_INVALID_CONSTANT
  HPE_INVALID_VERSION
  HPE_INVALID_HEADER_TOKEN
  HPE_INVALID_CONTENT_LENGTH
  HPE_INVALID_CHUNK_SIZE
  HPE_INVALID_STATUS
  HPE_INVALID_EOF_STATE
  HPE_INVALID_TRANSFER_ENCODING
  HPE_CB_MESSAGE_BEGIN
  HPE_CB_HEADERS_COMPLETE
  HPE_CB_MESSAGE_COMPLETE
  HPE_CB_CHUNK_HEADER
  HPE_CB_CHUNK_COMPLETE
  HPE_PAUSED
  HPE_PAUSED_UPGRADE
  HPE_PAUSED_H2_UPGRADE
  HPE_USER
  HPE_CB_URL_COMPLETE
  HPE_CB_STATUS_COMPLETE
  HPE_CB_METHOD_COMPLETE
  HPE_CB_VERSION_COMPLETE
  HPE_CB_HEADER_FIELD_COMPLETE
  HPE_CB_HEADER_VALUE_COMPLETE
  HPE_CB_CHUNK_EXTENSION_NAME_COMPLETE
  HPE_CB_CHUNK_EXTENSION_VALUE_COMPLETE
  HPE_CB_RESET

pub fun llhttp-errno/int(i: llhttp-errno): int32
  match i
    HPE_OK -> 0.int32
    HPE_INTERNAL -> 1.int32
    HPE_STRICT -> 2.int32
    HPE_CR_EXPECTED -> 25.int32
    HPE_LF_EXPECTED -> 3.int32
    HPE_UNEXPECTED_CONTENT_LENGTH -> 4.int32
    HPE_UNEXPECTED_SPACE -> 30.int32
    HPE_CLOSED_CONNECTION -> 5.int32
    HPE_INVALID_METHOD -> 6.int32
    HPE_INVALID_URL -> 7.int32
    HPE_INVALID_CONSTANT -> 8.int32
    HPE_INVALID_VERSION -> 9.int32
    HPE_INVALID_HEADER_TOKEN -> 10.int32
    HPE_INVALID_CONTENT_LENGTH -> 11.int32
    HPE_INVALID_CHUNK_SIZE -> 12.int32
    HPE_INVALID_STATUS -> 13.int32
    HPE_INVALID_EOF_STATE -> 14.int32
    HPE_INVALID_TRANSFER_ENCODING -> 15.int32
    HPE_CB_MESSAGE_BEGIN -> 16.int32
    HPE_CB_HEADERS_COMPLETE -> 17.int32
    HPE_CB_MESSAGE_COMPLETE -> 18.int32
    HPE_CB_CHUNK_HEADER -> 19.int32
    HPE_CB_CHUNK_COMPLETE -> 20.int32
    HPE_PAUSED -> 21.int32
    HPE_PAUSED_UPGRADE -> 22.int32
    HPE_PAUSED_H2_UPGRADE -> 23.int32
    HPE_USER -> 24.int32
    HPE_CB_URL_COMPLETE -> 26.int32
    HPE_CB_STATUS_COMPLETE -> 27.int32
    HPE_CB_METHOD_COMPLETE -> 32.int32
    HPE_CB_VERSION_COMPLETE -> 33.int32
    HPE_CB_HEADER_FIELD_COMPLETE -> 28.int32
    HPE_CB_HEADER_VALUE_COMPLETE -> 29.int32
    HPE_CB_CHUNK_EXTENSION_NAME_COMPLETE -> 34.int32
    HPE_CB_CHUNK_EXTENSION_VALUE_COMPLETE -> 35.int32
    HPE_CB_RESET -> 31.int32

pub fun int/llhttp-errno(i: int32): exn llhttp-errno
  match i.int
    0 -> HPE_OK
    1 -> HPE_INTERNAL
    2 -> HPE_STRICT
    25 -> HPE_CR_EXPECTED
    3 -> HPE_LF_EXPECTED
    4 -> HPE_UNEXPECTED_CONTENT_LENGTH
    30 -> HPE_UNEXPECTED_SPACE
    5 -> HPE_CLOSED_CONNECTION
    6 -> HPE_INVALID_METHOD
    7 -> HPE_INVALID_URL
    8 -> HPE_INVALID_CONSTANT
    9 -> HPE_INVALID_VERSION
    10 -> HPE_INVALID_HEADER_TOKEN
    11 -> HPE_INVALID_CONTENT_LENGTH
    12 -> HPE_INVALID_CHUNK_SIZE
    13 -> HPE_INVALID_STATUS
    14 -> HPE_INVALID_EOF_STATE
    15 -> HPE_INVALID_TRANSFER_ENCODING
    16 -> HPE_CB_MESSAGE_BEGIN
    17 -> HPE_CB_HEADERS_COMPLETE
    18 -> HPE_CB_MESSAGE_COMPLETE
    19 -> HPE_CB_CHUNK_HEADER
    20 -> HPE_CB_CHUNK_COMPLETE
    21 -> HPE_PAUSED
    22 -> HPE_PAUSED_UPGRADE
    23 -> HPE_PAUSED_H2_UPGRADE
    24 -> HPE_USER
    26 -> HPE_CB_URL_COMPLETE
    27 -> HPE_CB_STATUS_COMPLETE
    32 -> HPE_CB_METHOD_COMPLETE
    33 -> HPE_CB_VERSION_COMPLETE
    28 -> HPE_CB_HEADER_FIELD_COMPLETE
    29 -> HPE_CB_HEADER_VALUE_COMPLETE
    34 -> HPE_CB_CHUNK_EXTENSION_NAME_COMPLETE
    35 -> HPE_CB_CHUNK_EXTENSION_VALUE_COMPLETE
    31 -> HPE_CB_RESET

type llhttp-flags
  F_CONNECTION_KEEP_ALIVE
  F_CONNECTION_CLOSE
  F_CONNECTION_UPGRADE
  F_CHUNKED
  F_UPGRADE
  F_CONTENT_LENGTH
  F_SKIPBODY
  F_TRAILING
  F_TRANSFER_ENCODING

pub fun llhttp-flags/int(i: llhttp-flags): int32
  match i
    F_CONNECTION_KEEP_ALIVE -> 1.int32
    F_CONNECTION_CLOSE -> 2.int32
    F_CONNECTION_UPGRADE -> 4.int32
    F_CHUNKED -> 8.int32
    F_UPGRADE -> 16.int32
    F_CONTENT_LENGTH -> 32.int32
    F_SKIPBODY -> 64.int32
    F_TRAILING -> 128.int32
    F_TRANSFER_ENCODING -> 512.int32

pub fun int/llhttp-flags(i: int32): exn llhttp-flags
  match i.int
    1 -> F_CONNECTION_KEEP_ALIVE
    2 -> F_CONNECTION_CLOSE
    4 -> F_CONNECTION_UPGRADE
    8 -> F_CHUNKED
    16 -> F_UPGRADE
    32 -> F_CONTENT_LENGTH
    64 -> F_SKIPBODY
    128 -> F_TRAILING
    512 -> F_TRANSFER_ENCODING

type llhttp-lenient-flags
  LENIENT_HEADERS
  LENIENT_CHUNKED_LENGTH
  LENIENT_KEEP_ALIVE
  LENIENT_TRANSFER_ENCODING
  LENIENT_VERSION
  LENIENT_DATA_AFTER_CLOSE
  LENIENT_OPTIONAL_LF_AFTER_CR
  LENIENT_OPTIONAL_CRLF_AFTER_CHUNK
  LENIENT_OPTIONAL_CR_BEFORE_LF
  LENIENT_SPACES_AFTER_CHUNK_SIZE

pub fun llhttp-lenient-flags/int(i: llhttp-lenient-flags): int32
  match i
    LENIENT_HEADERS -> 1.int32
    LENIENT_CHUNKED_LENGTH -> 2.int32
    LENIENT_KEEP_ALIVE -> 4.int32
    LENIENT_TRANSFER_ENCODING -> 8.int32
    LENIENT_VERSION -> 16.int32
    LENIENT_DATA_AFTER_CLOSE -> 32.int32
    LENIENT_OPTIONAL_LF_AFTER_CR -> 64.int32
    LENIENT_OPTIONAL_CRLF_AFTER_CHUNK -> 128.int32
    LENIENT_OPTIONAL_CR_BEFORE_LF -> 256.int32
    LENIENT_SPACES_AFTER_CHUNK_SIZE -> 512.int32

pub fun int/llhttp-lenient-flags(i: int32): exn llhttp-lenient-flags
  match i.int
    1 -> LENIENT_HEADERS
    2 -> LENIENT_CHUNKED_LENGTH
    4 -> LENIENT_KEEP_ALIVE
    8 -> LENIENT_TRANSFER_ENCODING
    16 -> LENIENT_VERSION
    32 -> LENIENT_DATA_AFTER_CLOSE
    64 -> LENIENT_OPTIONAL_LF_AFTER_CR
    128 -> LENIENT_OPTIONAL_CRLF_AFTER_CHUNK
    256 -> LENIENT_OPTIONAL_CR_BEFORE_LF
    512 -> LENIENT_SPACES_AFTER_CHUNK_SIZE

type llhttp-type
  HTTP_BOTH
  HTTP_REQUEST
  HTTP_RESPONSE

pub fun llhttp-type/int(i: llhttp-type): int32
  match i
    HTTP_BOTH -> 0.int32
    HTTP_REQUEST -> 1.int32
    HTTP_RESPONSE -> 2.int32

pub fun int/llhttp-type(i: int32): exn llhttp-type
  match i.int
    0 -> HTTP_BOTH
    1 -> HTTP_REQUEST
    2 -> HTTP_RESPONSE

type llhttp-finish
  HTTP_FINISH_SAFE
  HTTP_FINISH_SAFE_WITH_CB
  HTTP_FINISH_UNSAFE

pub fun llhttp-finish/int(i: llhttp-finish): int32
  match i
    HTTP_FINISH_SAFE -> 0.int32
    HTTP_FINISH_SAFE_WITH_CB -> 1.int32
    HTTP_FINISH_UNSAFE -> 2.int32

pub fun int/llhttp-finish(i: int32): exn llhttp-finish
  match i.int
    0 -> HTTP_FINISH_SAFE
    1 -> HTTP_FINISH_SAFE_WITH_CB
    2 -> HTTP_FINISH_UNSAFE

type llhttp-method
  HTTP_DELETE
  HTTP_GET
  HTTP_HEAD
  HTTP_POST
  HTTP_PUT
  HTTP_CONNECT
  HTTP_OPTIONS
  HTTP_TRACE
  HTTP_COPY
  HTTP_LOCK
  HTTP_MKCOL
  HTTP_MOVE
  HTTP_PROPFIND
  HTTP_PROPPATCH
  HTTP_SEARCH
  HTTP_UNLOCK
  HTTP_BIND
  HTTP_REBIND
  HTTP_UNBIND
  HTTP_ACL
  HTTP_REPORT
  HTTP_MKACTIVITY
  HTTP_CHECKOUT
  HTTP_MERGE
  HTTP_MSEARCH
  HTTP_NOTIFY
  HTTP_SUBSCRIBE
  HTTP_UNSUBSCRIBE
  HTTP_PATCH
  HTTP_PURGE
  HTTP_MKCALENDAR
  HTTP_LINK
  HTTP_UNLINK
  HTTP_SOURCE
  HTTP_PRI
  HTTP_DESCRIBE
  HTTP_ANNOUNCE
  HTTP_SETUP
  HTTP_PLAY
  HTTP_PAUSE
  HTTP_TEARDOWN
  HTTP_GET_PARAMETER
  HTTP_SET_PARAMETER
  HTTP_REDIRECT
  HTTP_RECORD
  HTTP_FLUSH
  HTTP_QUERY

pub fun llhttp-method/int(i: llhttp-method): int32
  match i
    HTTP_DELETE -> 0.int32
    HTTP_GET -> 1.int32
    HTTP_HEAD -> 2.int32
    HTTP_POST -> 3.int32
    HTTP_PUT -> 4.int32
    HTTP_CONNECT -> 5.int32
    HTTP_OPTIONS -> 6.int32
    HTTP_TRACE -> 7.int32
    HTTP_COPY -> 8.int32
    HTTP_LOCK -> 9.int32
    HTTP_MKCOL -> 10.int32
    HTTP_MOVE -> 11.int32
    HTTP_PROPFIND -> 12.int32
    HTTP_PROPPATCH -> 13.int32
    HTTP_SEARCH -> 14.int32
    HTTP_UNLOCK -> 15.int32
    HTTP_BIND -> 16.int32
    HTTP_REBIND -> 17.int32
    HTTP_UNBIND -> 18.int32
    HTTP_ACL -> 19.int32
    HTTP_REPORT -> 20.int32
    HTTP_MKACTIVITY -> 21.int32
    HTTP_CHECKOUT -> 22.int32
    HTTP_MERGE -> 23.int32
    HTTP_MSEARCH -> 24.int32
    HTTP_NOTIFY -> 25.int32
    HTTP_SUBSCRIBE -> 26.int32
    HTTP_UNSUBSCRIBE -> 27.int32
    HTTP_PATCH -> 28.int32
    HTTP_PURGE -> 29.int32
    HTTP_MKCALENDAR -> 30.int32
    HTTP_LINK -> 31.int32
    HTTP_UNLINK -> 32.int32
    HTTP_SOURCE -> 33.int32
    HTTP_PRI -> 34.int32
    HTTP_DESCRIBE -> 35.int32
    HTTP_ANNOUNCE -> 36.int32
    HTTP_SETUP -> 37.int32
    HTTP_PLAY -> 38.int32
    HTTP_PAUSE -> 39.int32
    HTTP_TEARDOWN -> 40.int32
    HTTP_GET_PARAMETER -> 41.int32
    HTTP_SET_PARAMETER -> 42.int32
    HTTP_REDIRECT -> 43.int32
    HTTP_RECORD -> 44.int32
    HTTP_FLUSH -> 45.int32
    HTTP_QUERY -> 46.int32

pub fun int/llhttp-method(i: int32): exn llhttp-method
  match i.int
    0 -> HTTP_DELETE
    1 -> HTTP_GET
    2 -> HTTP_HEAD
    3 -> HTTP_POST
    4 -> HTTP_PUT
    5 -> HTTP_CONNECT
    6 -> HTTP_OPTIONS
    7 -> HTTP_TRACE
    8 -> HTTP_COPY
    9 -> HTTP_LOCK
    10 -> HTTP_MKCOL
    11 -> HTTP_MOVE
    12 -> HTTP_PROPFIND
    13 -> HTTP_PROPPATCH
    14 -> HTTP_SEARCH
    15 -> HTTP_UNLOCK
    16 -> HTTP_BIND
    17 -> HTTP_REBIND
    18 -> HTTP_UNBIND
    19 -> HTTP_ACL
    20 -> HTTP_REPORT
    21 -> HTTP_MKACTIVITY
    22 -> HTTP_CHECKOUT
    23 -> HTTP_MERGE
    24 -> HTTP_MSEARCH
    25 -> HTTP_NOTIFY
    26 -> HTTP_SUBSCRIBE
    27 -> HTTP_UNSUBSCRIBE
    28 -> HTTP_PATCH
    29 -> HTTP_PURGE
    30 -> HTTP_MKCALENDAR
    31 -> HTTP_LINK
    32 -> HTTP_UNLINK
    33 -> HTTP_SOURCE
    34 -> HTTP_PRI
    35 -> HTTP_DESCRIBE
    36 -> HTTP_ANNOUNCE
    37 -> HTTP_SETUP
    38 -> HTTP_PLAY
    39 -> HTTP_PAUSE
    40 -> HTTP_TEARDOWN
    41 -> HTTP_GET_PARAMETER
    42 -> HTTP_SET_PARAMETER
    43 -> HTTP_REDIRECT
    44 -> HTTP_RECORD
    45 -> HTTP_FLUSH
    46 -> HTTP_QUERY

type llhttp-status
  HTTP_STATUS_CONTINUE
  HTTP_STATUS_SWITCHING_PROTOCOLS
  HTTP_STATUS_PROCESSING
  HTTP_STATUS_EARLY_HINTS
  HTTP_STATUS_RESPONSE_IS_STALE
  HTTP_STATUS_REVALIDATION_FAILED
  HTTP_STATUS_DISCONNECTED_OPERATION
  HTTP_STATUS_HEURISTIC_EXPIRATION
  HTTP_STATUS_MISCELLANEOUS_WARNING
  HTTP_STATUS_OK
  HTTP_STATUS_CREATED
  HTTP_STATUS_ACCEPTED
  HTTP_STATUS_NON_AUTHORITATIVE_INFORMATION
  HTTP_STATUS_NO_CONTENT
  HTTP_STATUS_RESET_CONTENT
  HTTP_STATUS_PARTIAL_CONTENT
  HTTP_STATUS_MULTI_STATUS
  HTTP_STATUS_ALREADY_REPORTED
  HTTP_STATUS_TRANSFORMATION_APPLIED
  HTTP_STATUS_IM_USED
  HTTP_STATUS_MISCELLANEOUS_PERSISTENT_WARNING
  HTTP_STATUS_MULTIPLE_CHOICES
  HTTP_STATUS_MOVED_PERMANENTLY
  HTTP_STATUS_FOUND
  HTTP_STATUS_SEE_OTHER
  HTTP_STATUS_NOT_MODIFIED
  HTTP_STATUS_USE_PROXY
  HTTP_STATUS_SWITCH_PROXY
  HTTP_STATUS_TEMPORARY_REDIRECT
  HTTP_STATUS_PERMANENT_REDIRECT
  HTTP_STATUS_BAD_REQUEST
  HTTP_STATUS_UNAUTHORIZED
  HTTP_STATUS_PAYMENT_REQUIRED
  HTTP_STATUS_FORBIDDEN
  HTTP_STATUS_NOT_FOUND
  HTTP_STATUS_METHOD_NOT_ALLOWED
  HTTP_STATUS_NOT_ACCEPTABLE
  HTTP_STATUS_PROXY_AUTHENTICATION_REQUIRED
  HTTP_STATUS_REQUEST_TIMEOUT
  HTTP_STATUS_CONFLICT
  HTTP_STATUS_GONE
  HTTP_STATUS_LENGTH_REQUIRED
  HTTP_STATUS_PRECONDITION_FAILED
  HTTP_STATUS_PAYLOAD_TOO_LARGE
  HTTP_STATUS_URI_TOO_LONG
  HTTP_STATUS_UNSUPPORTED_MEDIA_TYPE
  HTTP_STATUS_RANGE_NOT_SATISFIABLE
  HTTP_STATUS_EXPECTATION_FAILED
  HTTP_STATUS_IM_A_TEAPOT
  HTTP_STATUS_PAGE_EXPIRED
  HTTP_STATUS_ENHANCE_YOUR_CALM
  HTTP_STATUS_MISDIRECTED_REQUEST
  HTTP_STATUS_UNPROCESSABLE_ENTITY
  HTTP_STATUS_LOCKED
  HTTP_STATUS_FAILED_DEPENDENCY
  HTTP_STATUS_TOO_EARLY
  HTTP_STATUS_UPGRADE_REQUIRED
  HTTP_STATUS_PRECONDITION_REQUIRED
  HTTP_STATUS_TOO_MANY_REQUESTS
  HTTP_STATUS_REQUEST_HEADER_FIELDS_TOO_LARGE_UNOFFICIAL
  HTTP_STATUS_REQUEST_HEADER_FIELDS_TOO_LARGE
  HTTP_STATUS_LOGIN_TIMEOUT
  HTTP_STATUS_NO_RESPONSE
  HTTP_STATUS_RETRY_WITH
  HTTP_STATUS_BLOCKED_BY_PARENTAL_CONTROL
  HTTP_STATUS_UNAVAILABLE_FOR_LEGAL_REASONS
  HTTP_STATUS_CLIENT_CLOSED_LOAD_BALANCED_REQUEST
  HTTP_STATUS_INVALID_X_FORWARDED_FOR
  HTTP_STATUS_REQUEST_HEADER_TOO_LARGE
  HTTP_STATUS_SSL_CERTIFICATE_ERROR
  HTTP_STATUS_SSL_CERTIFICATE_REQUIRED
  HTTP_STATUS_HTTP_REQUEST_SENT_TO_HTTPS_PORT
  HTTP_STATUS_INVALID_TOKEN
  HTTP_STATUS_CLIENT_CLOSED_REQUEST
  HTTP_STATUS_INTERNAL_SERVER_ERROR
  HTTP_STATUS_NOT_IMPLEMENTED
  HTTP_STATUS_BAD_GATEWAY
  HTTP_STATUS_SERVICE_UNAVAILABLE
  HTTP_STATUS_GATEWAY_TIMEOUT
  HTTP_STATUS_HTTP_VERSION_NOT_SUPPORTED
  HTTP_STATUS_VARIANT_ALSO_NEGOTIATES
  HTTP_STATUS_INSUFFICIENT_STORAGE
  HTTP_STATUS_LOOP_DETECTED
  HTTP_STATUS_BANDWIDTH_LIMIT_EXCEEDED
  HTTP_STATUS_NOT_EXTENDED
  HTTP_STATUS_NETWORK_AUTHENTICATION_REQUIRED
  HTTP_STATUS_WEB_SERVER_UNKNOWN_ERROR
  HTTP_STATUS_WEB_SERVER_IS_DOWN
  HTTP_STATUS_CONNECTION_TIMEOUT
  HTTP_STATUS_ORIGIN_IS_UNREACHABLE
  HTTP_STATUS_TIMEOUT_OCCURED
  HTTP_STATUS_SSL_HANDSHAKE_FAILED
  HTTP_STATUS_INVALID_SSL_CERTIFICATE
  HTTP_STATUS_RAILGUN_ERROR
  HTTP_STATUS_SITE_IS_OVERLOADED
  HTTP_STATUS_SITE_IS_FROZEN
  HTTP_STATUS_IDENTITY_PROVIDER_AUTHENTICATION_ERROR
  HTTP_STATUS_NETWORK_READ_TIMEOUT
  HTTP_STATUS_NETWORK_CONNECT_TIMEOUT

pub fun llhttp-status/int(i: llhttp-status): int32
  match i
    HTTP_STATUS_CONTINUE -> 100.int32
    HTTP_STATUS_SWITCHING_PROTOCOLS -> 101.int32
    HTTP_STATUS_PROCESSING -> 102.int32
    HTTP_STATUS_EARLY_HINTS -> 103.int32
    HTTP_STATUS_RESPONSE_IS_STALE -> 110.int32
    HTTP_STATUS_REVALIDATION_FAILED -> 111.int32
    HTTP_STATUS_DISCONNECTED_OPERATION -> 112.int32
    HTTP_STATUS_HEURISTIC_EXPIRATION -> 113.int32
    HTTP_STATUS_MISCELLANEOUS_WARNING -> 199.int32
    HTTP_STATUS_OK -> 200.int32
    HTTP_STATUS_CREATED -> 201.int32
    HTTP_STATUS_ACCEPTED -> 202.int32
    HTTP_STATUS_NON_AUTHORITATIVE_INFORMATION -> 203.int32
    HTTP_STATUS_NO_CONTENT -> 204.int32
    HTTP_STATUS_RESET_CONTENT -> 205.int32
    HTTP_STATUS_PARTIAL_CONTENT -> 206.int32
    HTTP_STATUS_MULTI_STATUS -> 207.int32
    HTTP_STATUS_ALREADY_REPORTED -> 208.int32
    HTTP_STATUS_TRANSFORMATION_APPLIED -> 214.int32
    HTTP_STATUS_IM_USED -> 226.int32
    HTTP_STATUS_MISCELLANEOUS_PERSISTENT_WARNING -> 299.int32
    HTTP_STATUS_MULTIPLE_CHOICES -> 300.int32
    HTTP_STATUS_MOVED_PERMANENTLY -> 301.int32
    HTTP_STATUS_FOUND -> 302.int32
    HTTP_STATUS_SEE_OTHER -> 303.int32
    HTTP_STATUS_NOT_MODIFIED -> 304.int32
    HTTP_STATUS_USE_PROXY -> 305.int32
    HTTP_STATUS_SWITCH_PROXY -> 306.int32
    HTTP_STATUS_TEMPORARY_REDIRECT -> 307.int32
    HTTP_STATUS_PERMANENT_REDIRECT -> 308.int32
    HTTP_STATUS_BAD_REQUEST -> 400.int32
    HTTP_STATUS_UNAUTHORIZED -> 401.int32
    HTTP_STATUS_PAYMENT_REQUIRED -> 402.int32
    HTTP_STATUS_FORBIDDEN -> 403.int32
    HTTP_STATUS_NOT_FOUND -> 404.int32
    HTTP_STATUS_METHOD_NOT_ALLOWED -> 405.int32
    HTTP_STATUS_NOT_ACCEPTABLE -> 406.int32
    HTTP_STATUS_PROXY_AUTHENTICATION_REQUIRED -> 407.int32
    HTTP_STATUS_REQUEST_TIMEOUT -> 408.int32
    HTTP_STATUS_CONFLICT -> 409.int32
    HTTP_STATUS_GONE -> 410.int32
    HTTP_STATUS_LENGTH_REQUIRED -> 411.int32
    HTTP_STATUS_PRECONDITION_FAILED -> 412.int32
    HTTP_STATUS_PAYLOAD_TOO_LARGE -> 413.int32
    HTTP_STATUS_URI_TOO_LONG -> 414.int32
    HTTP_STATUS_UNSUPPORTED_MEDIA_TYPE -> 415.int32
    HTTP_STATUS_RANGE_NOT_SATISFIABLE -> 416.int32
    HTTP_STATUS_EXPECTATION_FAILED -> 417.int32
    HTTP_STATUS_IM_A_TEAPOT -> 418.int32
    HTTP_STATUS_PAGE_EXPIRED -> 419.int32
    HTTP_STATUS_ENHANCE_YOUR_CALM -> 420.int32
    HTTP_STATUS_MISDIRECTED_REQUEST -> 421.int32
    HTTP_STATUS_UNPROCESSABLE_ENTITY -> 422.int32
    HTTP_STATUS_LOCKED -> 423.int32
    HTTP_STATUS_FAILED_DEPENDENCY -> 424.int32
    HTTP_STATUS_TOO_EARLY -> 425.int32
    HTTP_STATUS_UPGRADE_REQUIRED -> 426.int32
    HTTP_STATUS_PRECONDITION_REQUIRED -> 428.int32
    HTTP_STATUS_TOO_MANY_REQUESTS -> 429.int32
    HTTP_STATUS_REQUEST_HEADER_FIELDS_TOO_LARGE_UNOFFICIAL -> 430.int32
    HTTP_STATUS_REQUEST_HEADER_FIELDS_TOO_LARGE -> 431.int32
    HTTP_STATUS_LOGIN_TIMEOUT -> 440.int32
    HTTP_STATUS_NO_RESPONSE -> 444.int32
    HTTP_STATUS_RETRY_WITH -> 449.int32
    HTTP_STATUS_BLOCKED_BY_PARENTAL_CONTROL -> 450.int32
    HTTP_STATUS_UNAVAILABLE_FOR_LEGAL_REASONS -> 451.int32
    HTTP_STATUS_CLIENT_CLOSED_LOAD_BALANCED_REQUEST -> 460.int32
    HTTP_STATUS_INVALID_X_FORWARDED_FOR -> 463.int32
    HTTP_STATUS_REQUEST_HEADER_TOO_LARGE -> 494.int32
    HTTP_STATUS_SSL_CERTIFICATE_ERROR -> 495.int32
    HTTP_STATUS_SSL_CERTIFICATE_REQUIRED -> 496.int32
    HTTP_STATUS_HTTP_REQUEST_SENT_TO_HTTPS_PORT -> 497.int32
    HTTP_STATUS_INVALID_TOKEN -> 498.int32
    HTTP_STATUS_CLIENT_CLOSED_REQUEST -> 499.int32
    HTTP_STATUS_INTERNAL_SERVER_ERROR -> 500.int32
    HTTP_STATUS_NOT_IMPLEMENTED -> 501.int32
    HTTP_STATUS_BAD_GATEWAY -> 502.int32
    HTTP_STATUS_SERVICE_UNAVAILABLE -> 503.int32
    HTTP_STATUS_GATEWAY_TIMEOUT -> 504.int32
    HTTP_STATUS_HTTP_VERSION_NOT_SUPPORTED -> 505.int32
    HTTP_STATUS_VARIANT_ALSO_NEGOTIATES -> 506.int32
    HTTP_STATUS_INSUFFICIENT_STORAGE -> 507.int32
    HTTP_STATUS_LOOP_DETECTED -> 508.int32
    HTTP_STATUS_BANDWIDTH_LIMIT_EXCEEDED -> 509.int32
    HTTP_STATUS_NOT_EXTENDED -> 510.int32
    HTTP_STATUS_NETWORK_AUTHENTICATION_REQUIRED -> 511.int32
    HTTP_STATUS_WEB_SERVER_UNKNOWN_ERROR -> 520.int32
    HTTP_STATUS_WEB_SERVER_IS_DOWN -> 521.int32
    HTTP_STATUS_CONNECTION_TIMEOUT -> 522.int32
    HTTP_STATUS_ORIGIN_IS_UNREACHABLE -> 523.int32
    HTTP_STATUS_TIMEOUT_OCCURED -> 524.int32
    HTTP_STATUS_SSL_HANDSHAKE_FAILED -> 525.int32
    HTTP_STATUS_INVALID_SSL_CERTIFICATE -> 526.int32
    HTTP_STATUS_RAILGUN_ERROR -> 527.int32
    HTTP_STATUS_SITE_IS_OVERLOADED -> 529.int32
    HTTP_STATUS_SITE_IS_FROZEN -> 530.int32
    HTTP_STATUS_IDENTITY_PROVIDER_AUTHENTICATION_ERROR -> 561.int32
    HTTP_STATUS_NETWORK_READ_TIMEOUT -> 598.int32
    HTTP_STATUS_NETWORK_CONNECT_TIMEOUT -> 599.int32

pub fun int/llhttp-status(i: int32): exn llhttp-status
  match i.int
    100 -> HTTP_STATUS_CONTINUE
    101 -> HTTP_STATUS_SWITCHING_PROTOCOLS
    102 -> HTTP_STATUS_PROCESSING
    103 -> HTTP_STATUS_EARLY_HINTS
    110 -> HTTP_STATUS_RESPONSE_IS_STALE
    111 -> HTTP_STATUS_REVALIDATION_FAILED
    112 -> HTTP_STATUS_DISCONNECTED_OPERATION
    113 -> HTTP_STATUS_HEURISTIC_EXPIRATION
    199 -> HTTP_STATUS_MISCELLANEOUS_WARNING
    200 -> HTTP_STATUS_OK
    201 -> HTTP_STATUS_CREATED
    202 -> HTTP_STATUS_ACCEPTED
    203 -> HTTP_STATUS_NON_AUTHORITATIVE_INFORMATION
    204 -> HTTP_STATUS_NO_CONTENT
    205 -> HTTP_STATUS_RESET_CONTENT
    206 -> HTTP_STATUS_PARTIAL_CONTENT
    207 -> HTTP_STATUS_MULTI_STATUS
    208 -> HTTP_STATUS_ALREADY_REPORTED
    214 -> HTTP_STATUS_TRANSFORMATION_APPLIED
    226 -> HTTP_STATUS_IM_USED
    299 -> HTTP_STATUS_MISCELLANEOUS_PERSISTENT_WARNING
    300 -> HTTP_STATUS_MULTIPLE_CHOICES
    301 -> HTTP_STATUS_MOVED_PERMANENTLY
    302 -> HTTP_STATUS_FOUND
    303 -> HTTP_STATUS_SEE_OTHER
    304 -> HTTP_STATUS_NOT_MODIFIED
    305 -> HTTP_STATUS_USE_PROXY
    306 -> HTTP_STATUS_SWITCH_PROXY
    307 -> HTTP_STATUS_TEMPORARY_REDIRECT
    308 -> HTTP_STATUS_PERMANENT_REDIRECT
    400 -> HTTP_STATUS_BAD_REQUEST
    401 -> HTTP_STATUS_UNAUTHORIZED
    402 -> HTTP_STATUS_PAYMENT_REQUIRED
    403 -> HTTP_STATUS_FORBIDDEN
    404 -> HTTP_STATUS_NOT_FOUND
    405 -> HTTP_STATUS_METHOD_NOT_ALLOWED
    406 -> HTTP_STATUS_NOT_ACCEPTABLE
    407 -> HTTP_STATUS_PROXY_AUTHENTICATION_REQUIRED
    408 -> HTTP_STATUS_REQUEST_TIMEOUT
    409 -> HTTP_STATUS_CONFLICT
    410 -> HTTP_STATUS_GONE
    411 -> HTTP_STATUS_LENGTH_REQUIRED
    412 -> HTTP_STATUS_PRECONDITION_FAILED
    413 -> HTTP_STATUS_PAYLOAD_TOO_LARGE
    414 -> HTTP_STATUS_URI_TOO_LONG
    415 -> HTTP_STATUS_UNSUPPORTED_MEDIA_TYPE
    416 -> HTTP_STATUS_RANGE_NOT_SATISFIABLE
    417 -> HTTP_STATUS_EXPECTATION_FAILED
    418 -> HTTP_STATUS_IM_A_TEAPOT
    419 -> HTTP_STATUS_PAGE_EXPIRED
    420 -> HTTP_STATUS_ENHANCE_YOUR_CALM
    421 -> HTTP_STATUS_MISDIRECTED_REQUEST
    422 -> HTTP_STATUS_UNPROCESSABLE_ENTITY
    423 -> HTTP_STATUS_LOCKED
    424 -> HTTP_STATUS_FAILED_DEPENDENCY
    425 -> HTTP_STATUS_TOO_EARLY
    426 -> HTTP_STATUS_UPGRADE_REQUIRED
    428 -> HTTP_STATUS_PRECONDITION_REQUIRED
    429 -> HTTP_STATUS_TOO_MANY_REQUESTS
    430 -> HTTP_STATUS_REQUEST_HEADER_FIELDS_TOO_LARGE_UNOFFICIAL
    431 -> HTTP_STATUS_REQUEST_HEADER_FIELDS_TOO_LARGE
    440 -> HTTP_STATUS_LOGIN_TIMEOUT
    444 -> HTTP_STATUS_NO_RESPONSE
    449 -> HTTP_STATUS_RETRY_WITH
    450 -> HTTP_STATUS_BLOCKED_BY_PARENTAL_CONTROL
    451 -> HTTP_STATUS_UNAVAILABLE_FOR_LEGAL_REASONS
    460 -> HTTP_STATUS_CLIENT_CLOSED_LOAD_BALANCED_REQUEST
    463 -> HTTP_STATUS_INVALID_X_FORWARDED_FOR
    494 -> HTTP_STATUS_REQUEST_HEADER_TOO_LARGE
    495 -> HTTP_STATUS_SSL_CERTIFICATE_ERROR
    496 -> HTTP_STATUS_SSL_CERTIFICATE_REQUIRED
    497 -> HTTP_STATUS_HTTP_REQUEST_SENT_TO_HTTPS_PORT
    498 -> HTTP_STATUS_INVALID_TOKEN
    499 -> HTTP_STATUS_CLIENT_CLOSED_REQUEST
    500 -> HTTP_STATUS_INTERNAL_SERVER_ERROR
    501 -> HTTP_STATUS_NOT_IMPLEMENTED
    502 -> HTTP_STATUS_BAD_GATEWAY
    503 -> HTTP_STATUS_SERVICE_UNAVAILABLE
    504 -> HTTP_STATUS_GATEWAY_TIMEOUT
    505 -> HTTP_STATUS_HTTP_VERSION_NOT_SUPPORTED
    506 -> HTTP_STATUS_VARIANT_ALSO_NEGOTIATES
    507 -> HTTP_STATUS_INSUFFICIENT_STORAGE
    508 -> HTTP_STATUS_LOOP_DETECTED
    509 -> HTTP_STATUS_BANDWIDTH_LIMIT_EXCEEDED
    510 -> HTTP_STATUS_NOT_EXTENDED
    511 -> HTTP_STATUS_NETWORK_AUTHENTICATION_REQUIRED
    520 -> HTTP_STATUS_WEB_SERVER_UNKNOWN_ERROR
    521 -> HTTP_STATUS_WEB_SERVER_IS_DOWN
    522 -> HTTP_STATUS_CONNECTION_TIMEOUT
    523 -> HTTP_STATUS_ORIGIN_IS_UNREACHABLE
    524 -> HTTP_STATUS_TIMEOUT_OCCURED
    525 -> HTTP_STATUS_SSL_HANDSHAKE_FAILED
    526 -> HTTP_STATUS_INVALID_SSL_CERTIFICATE
    527 -> HTTP_STATUS_RAILGUN_ERROR
    529 -> HTTP_STATUS_SITE_IS_OVERLOADED
    530 -> HTTP_STATUS_SITE_IS_FROZEN
    561 -> HTTP_STATUS_IDENTITY_PROVIDER_AUTHENTICATION_ERROR
    598 -> HTTP_STATUS_NETWORK_READ_TIMEOUT
    599 -> HTTP_STATUS_NETWORK_CONNECT_TIMEOUT

pub struct llhttp-settings-s
  on-message-begin: llhttp-cb
  on-url: llhttp-data-cb
  on-status: llhttp-data-cb
  on-method: llhttp-data-cb
  on-version: llhttp-data-cb
  on-header-field: llhttp-data-cb
  on-header-value: llhttp-data-cb
  on-chunk-extension-name: llhttp-data-cb
  on-chunk-extension-value: llhttp-data-cb
  on-headers-complete: llhttp-cb
  on-body: llhttp-data-cb
  on-message-complete: llhttp-cb
  on-url-complete: llhttp-cb
  on-status-complete: llhttp-cb
  on-method-complete: llhttp-cb
  on-version-complete: llhttp-cb
  on-header-field-complete: llhttp-cb
  on-header-value-complete: llhttp-cb
  on-chunk-extension-name-complete: llhttp-cb
  on-chunk-extension-value-complete: llhttp-cb
  on-chunk-header: llhttp-cb
  on-chunk-complete: llhttp-cb
  on-reset: llhttp-cb

pub type llhttp-settings-s-c
pub alias llhttp-settings-sp = c-pointer<llhttp-settings-s-c>
pub alias llhttp-settings-sc = owned-c<llhttp-settings-s-c>
pub alias llhttp-settings-scb<s::S> = borrowed-c<s,llhttp-settings-s-c>
pub alias llhttp-settings-sca = owned-c<c-array<llhttp-settings-s-c>>

pub extern llhttp-settings-s/size-of(c: c-null<llhttp-settings-s-c>): int32
  c inline "sizeof(struct llhttp_settings_s)"

pub fun llhttp-settings-sc(): llhttp-settings-sc
  malloc(?size-of=llhttp-settings-s/size-of)

pub fun llhttp-settings-sc-calloc(): llhttp-settings-sc
  malloc-c(?size-of=llhttp-settings-s/size-of)

pub fun llhttp-settings-sc-array(n: int): llhttp-settings-sca
  malloc(n.int32, ?size-of=llhttp-settings-s/size-of)

pub fun llhttp-settings-sc-array-calloc(n: int): llhttp-settings-sca
  malloc-c(n.int32, ?size-of=llhttp-settings-s/size-of)

pub inline extern llhttp-settings-s-ptrraw/on-message-begin(s: intptr_t): c-pointer<intptr_t>
  c inline "(intptr_t)(((struct llhttp_settings_s*)#1)->on_message_begin)"

pub inline fun llhttp-settings-sp/on-message-begin(s: llhttp-settings-sp): <> llhttp-cb
  s.cextern/c-pointer/ptr.llhttp-settings-s-ptrraw/on-message-begin

pub inline fun llhttp-settings-sc/on-message-begin(^s: llhttp-settings-sc): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-message-begin)

pub inline fun llhttp-settings-scb/on-message-begin(^s: llhttp-settings-scb<s::S>): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-message-begin)

pub inline extern llhttp-settings-s-ptrraw/set-on-message-begin(s: intptr_t, on-message-begin: c-pointer<intptr_t>): ()
  c inline "((struct llhttp_settings_s*)#1)->on_message_begin = (llhttp_cb)#2"

pub inline fun llhttp-settings-sp/set-on-message-begin(s: llhttp-settings-sp, on-message-begin: llhttp-cb): ()
  s.llhttp-settings-s-ptrraw/set-on-message-begin(on-message-begin)

pub inline fun llhttp-settings-sc/set-on-message-begin(^s: llhttp-settings-sc, on-message-begin: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-message-begin(on-message-begin))

pub inline fun llhttp-settings-scb/set-on-message-begin(^s: llhttp-settings-scb<s::S>, on-message-begin: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-message-begin(on-message-begin))

pub inline extern llhttp-settings-s-ptrraw/on-url(s: intptr_t): c-pointer<intptr_t>
  c inline "(intptr_t)(((struct llhttp_settings_s*)#1)->on_url)"

pub inline fun llhttp-settings-sp/on-url(s: llhttp-settings-sp): <> llhttp-data-cb
  s.cextern/c-pointer/ptr.llhttp-settings-s-ptrraw/on-url

pub inline fun llhttp-settings-sc/on-url(^s: llhttp-settings-sc): <> llhttp-data-cb
  s.with-ptr(llhttp-settings-sp/on-url)

pub inline fun llhttp-settings-scb/on-url(^s: llhttp-settings-scb<s::S>): <> llhttp-data-cb
  s.with-ptr(llhttp-settings-sp/on-url)

pub inline extern llhttp-settings-s-ptrraw/set-on-url(s: intptr_t, on-url: c-pointer<intptr_t>): ()
  c inline "((struct llhttp_settings_s*)#1)->on_url = (llhttp_data_cb)#2"

pub inline fun llhttp-settings-sp/set-on-url(s: llhttp-settings-sp, on-url: llhttp-data-cb): ()
  s.llhttp-settings-s-ptrraw/set-on-url(on-url)

pub inline fun llhttp-settings-sc/set-on-url(^s: llhttp-settings-sc, on-url: llhttp-data-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-url(on-url))

pub inline fun llhttp-settings-scb/set-on-url(^s: llhttp-settings-scb<s::S>, on-url: llhttp-data-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-url(on-url))

pub inline extern llhttp-settings-s-ptrraw/on-status(s: intptr_t): c-pointer<intptr_t>
  c inline "(intptr_t)(((struct llhttp_settings_s*)#1)->on_status)"

pub inline fun llhttp-settings-sp/on-status(s: llhttp-settings-sp): <> llhttp-data-cb
  s.cextern/c-pointer/ptr.llhttp-settings-s-ptrraw/on-status

pub inline fun llhttp-settings-sc/on-status(^s: llhttp-settings-sc): <> llhttp-data-cb
  s.with-ptr(llhttp-settings-sp/on-status)

pub inline fun llhttp-settings-scb/on-status(^s: llhttp-settings-scb<s::S>): <> llhttp-data-cb
  s.with-ptr(llhttp-settings-sp/on-status)

pub inline extern llhttp-settings-s-ptrraw/set-on-status(s: intptr_t, on-status: c-pointer<intptr_t>): ()
  c inline "((struct llhttp_settings_s*)#1)->on_status = (llhttp_data_cb)#2"

pub inline fun llhttp-settings-sp/set-on-status(s: llhttp-settings-sp, on-status: llhttp-data-cb): ()
  s.llhttp-settings-s-ptrraw/set-on-status(on-status)

pub inline fun llhttp-settings-sc/set-on-status(^s: llhttp-settings-sc, on-status: llhttp-data-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-status(on-status))

pub inline fun llhttp-settings-scb/set-on-status(^s: llhttp-settings-scb<s::S>, on-status: llhttp-data-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-status(on-status))

pub inline extern llhttp-settings-s-ptrraw/on-method(s: intptr_t): c-pointer<intptr_t>
  c inline "(intptr_t)(((struct llhttp_settings_s*)#1)->on_method)"

pub inline fun llhttp-settings-sp/on-method(s: llhttp-settings-sp): <> llhttp-data-cb
  s.cextern/c-pointer/ptr.llhttp-settings-s-ptrraw/on-method

pub inline fun llhttp-settings-sc/on-method(^s: llhttp-settings-sc): <> llhttp-data-cb
  s.with-ptr(llhttp-settings-sp/on-method)

pub inline fun llhttp-settings-scb/on-method(^s: llhttp-settings-scb<s::S>): <> llhttp-data-cb
  s.with-ptr(llhttp-settings-sp/on-method)

pub inline extern llhttp-settings-s-ptrraw/set-on-method(s: intptr_t, on-method: c-pointer<intptr_t>): ()
  c inline "((struct llhttp_settings_s*)#1)->on_method = (llhttp_data_cb)#2"

pub inline fun llhttp-settings-sp/set-on-method(s: llhttp-settings-sp, on-method: llhttp-data-cb): ()
  s.llhttp-settings-s-ptrraw/set-on-method(on-method)

pub inline fun llhttp-settings-sc/set-on-method(^s: llhttp-settings-sc, on-method: llhttp-data-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-method(on-method))

pub inline fun llhttp-settings-scb/set-on-method(^s: llhttp-settings-scb<s::S>, on-method: llhttp-data-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-method(on-method))

pub inline extern llhttp-settings-s-ptrraw/on-version(s: intptr_t): c-pointer<intptr_t>
  c inline "(intptr_t)(((struct llhttp_settings_s*)#1)->on_version)"

pub inline fun llhttp-settings-sp/on-version(s: llhttp-settings-sp): <> llhttp-data-cb
  s.cextern/c-pointer/ptr.llhttp-settings-s-ptrraw/on-version

pub inline fun llhttp-settings-sc/on-version(^s: llhttp-settings-sc): <> llhttp-data-cb
  s.with-ptr(llhttp-settings-sp/on-version)

pub inline fun llhttp-settings-scb/on-version(^s: llhttp-settings-scb<s::S>): <> llhttp-data-cb
  s.with-ptr(llhttp-settings-sp/on-version)

pub inline extern llhttp-settings-s-ptrraw/set-on-version(s: intptr_t, on-version: c-pointer<intptr_t>): ()
  c inline "((struct llhttp_settings_s*)#1)->on_version = (llhttp_data_cb)#2"

pub inline fun llhttp-settings-sp/set-on-version(s: llhttp-settings-sp, on-version: llhttp-data-cb): ()
  s.llhttp-settings-s-ptrraw/set-on-version(on-version)

pub inline fun llhttp-settings-sc/set-on-version(^s: llhttp-settings-sc, on-version: llhttp-data-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-version(on-version))

pub inline fun llhttp-settings-scb/set-on-version(^s: llhttp-settings-scb<s::S>, on-version: llhttp-data-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-version(on-version))

pub inline extern llhttp-settings-s-ptrraw/on-header-field(s: intptr_t): c-pointer<intptr_t>
  c inline "(intptr_t)(((struct llhttp_settings_s*)#1)->on_header_field)"

pub inline fun llhttp-settings-sp/on-header-field(s: llhttp-settings-sp): <> llhttp-data-cb
  s.cextern/c-pointer/ptr.llhttp-settings-s-ptrraw/on-header-field

pub inline fun llhttp-settings-sc/on-header-field(^s: llhttp-settings-sc): <> llhttp-data-cb
  s.with-ptr(llhttp-settings-sp/on-header-field)

pub inline fun llhttp-settings-scb/on-header-field(^s: llhttp-settings-scb<s::S>): <> llhttp-data-cb
  s.with-ptr(llhttp-settings-sp/on-header-field)

pub inline extern llhttp-settings-s-ptrraw/set-on-header-field(s: intptr_t, on-header-field: c-pointer<intptr_t>): ()
  c inline "((struct llhttp_settings_s*)#1)->on_header_field = (llhttp_data_cb)#2"

pub inline fun llhttp-settings-sp/set-on-header-field(s: llhttp-settings-sp, on-header-field: llhttp-data-cb): ()
  s.llhttp-settings-s-ptrraw/set-on-header-field(on-header-field)

pub inline fun llhttp-settings-sc/set-on-header-field(^s: llhttp-settings-sc, on-header-field: llhttp-data-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-header-field(on-header-field))

pub inline fun llhttp-settings-scb/set-on-header-field(^s: llhttp-settings-scb<s::S>, on-header-field: llhttp-data-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-header-field(on-header-field))

pub inline extern llhttp-settings-s-ptrraw/on-header-value(s: intptr_t): c-pointer<intptr_t>
  c inline "(intptr_t)(((struct llhttp_settings_s*)#1)->on_header_value)"

pub inline fun llhttp-settings-sp/on-header-value(s: llhttp-settings-sp): <> llhttp-data-cb
  s.cextern/c-pointer/ptr.llhttp-settings-s-ptrraw/on-header-value

pub inline fun llhttp-settings-sc/on-header-value(^s: llhttp-settings-sc): <> llhttp-data-cb
  s.with-ptr(llhttp-settings-sp/on-header-value)

pub inline fun llhttp-settings-scb/on-header-value(^s: llhttp-settings-scb<s::S>): <> llhttp-data-cb
  s.with-ptr(llhttp-settings-sp/on-header-value)

pub inline extern llhttp-settings-s-ptrraw/set-on-header-value(s: intptr_t, on-header-value: c-pointer<intptr_t>): ()
  c inline "((struct llhttp_settings_s*)#1)->on_header_value = (llhttp_data_cb)#2"

pub inline fun llhttp-settings-sp/set-on-header-value(s: llhttp-settings-sp, on-header-value: llhttp-data-cb): ()
  s.llhttp-settings-s-ptrraw/set-on-header-value(on-header-value)

pub inline fun llhttp-settings-sc/set-on-header-value(^s: llhttp-settings-sc, on-header-value: llhttp-data-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-header-value(on-header-value))

pub inline fun llhttp-settings-scb/set-on-header-value(^s: llhttp-settings-scb<s::S>, on-header-value: llhttp-data-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-header-value(on-header-value))

pub inline extern llhttp-settings-s-ptrraw/on-chunk-extension-name(s: intptr_t): c-pointer<intptr_t>
  c inline "(intptr_t)(((struct llhttp_settings_s*)#1)->on_chunk_extension_name)"

pub inline fun llhttp-settings-sp/on-chunk-extension-name(s: llhttp-settings-sp): <> llhttp-data-cb
  s.cextern/c-pointer/ptr.llhttp-settings-s-ptrraw/on-chunk-extension-name

pub inline fun llhttp-settings-sc/on-chunk-extension-name(^s: llhttp-settings-sc): <> llhttp-data-cb
  s.with-ptr(llhttp-settings-sp/on-chunk-extension-name)

pub inline fun llhttp-settings-scb/on-chunk-extension-name(^s: llhttp-settings-scb<s::S>): <> llhttp-data-cb
  s.with-ptr(llhttp-settings-sp/on-chunk-extension-name)

pub inline extern llhttp-settings-s-ptrraw/set-on-chunk-extension-name(s: intptr_t, on-chunk-extension-name: c-pointer<intptr_t>): ()
  c inline "((struct llhttp_settings_s*)#1)->on_chunk_extension_name = (llhttp_data_cb)#2"

pub inline fun llhttp-settings-sp/set-on-chunk-extension-name(s: llhttp-settings-sp, on-chunk-extension-name: llhttp-data-cb): ()
  s.llhttp-settings-s-ptrraw/set-on-chunk-extension-name(on-chunk-extension-name)

pub inline fun llhttp-settings-sc/set-on-chunk-extension-name(^s: llhttp-settings-sc, on-chunk-extension-name: llhttp-data-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-chunk-extension-name(on-chunk-extension-name))

pub inline fun llhttp-settings-scb/set-on-chunk-extension-name(^s: llhttp-settings-scb<s::S>, on-chunk-extension-name: llhttp-data-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-chunk-extension-name(on-chunk-extension-name))

pub inline extern llhttp-settings-s-ptrraw/on-chunk-extension-value(s: intptr_t): c-pointer<intptr_t>
  c inline "(intptr_t)(((struct llhttp_settings_s*)#1)->on_chunk_extension_value)"

pub inline fun llhttp-settings-sp/on-chunk-extension-value(s: llhttp-settings-sp): <> llhttp-data-cb
  s.cextern/c-pointer/ptr.llhttp-settings-s-ptrraw/on-chunk-extension-value

pub inline fun llhttp-settings-sc/on-chunk-extension-value(^s: llhttp-settings-sc): <> llhttp-data-cb
  s.with-ptr(llhttp-settings-sp/on-chunk-extension-value)

pub inline fun llhttp-settings-scb/on-chunk-extension-value(^s: llhttp-settings-scb<s::S>): <> llhttp-data-cb
  s.with-ptr(llhttp-settings-sp/on-chunk-extension-value)

pub inline extern llhttp-settings-s-ptrraw/set-on-chunk-extension-value(s: intptr_t, on-chunk-extension-value: c-pointer<intptr_t>): ()
  c inline "((struct llhttp_settings_s*)#1)->on_chunk_extension_value = (llhttp_data_cb)#2"

pub inline fun llhttp-settings-sp/set-on-chunk-extension-value(s: llhttp-settings-sp, on-chunk-extension-value: llhttp-data-cb): ()
  s.llhttp-settings-s-ptrraw/set-on-chunk-extension-value(on-chunk-extension-value)

pub inline fun llhttp-settings-sc/set-on-chunk-extension-value(^s: llhttp-settings-sc, on-chunk-extension-value: llhttp-data-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-chunk-extension-value(on-chunk-extension-value))

pub inline fun llhttp-settings-scb/set-on-chunk-extension-value(^s: llhttp-settings-scb<s::S>, on-chunk-extension-value: llhttp-data-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-chunk-extension-value(on-chunk-extension-value))

pub inline extern llhttp-settings-s-ptrraw/on-headers-complete(s: intptr_t): c-pointer<intptr_t>
  c inline "(intptr_t)(((struct llhttp_settings_s*)#1)->on_headers_complete)"

pub inline fun llhttp-settings-sp/on-headers-complete(s: llhttp-settings-sp): <> llhttp-cb
  s.cextern/c-pointer/ptr.llhttp-settings-s-ptrraw/on-headers-complete

pub inline fun llhttp-settings-sc/on-headers-complete(^s: llhttp-settings-sc): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-headers-complete)

pub inline fun llhttp-settings-scb/on-headers-complete(^s: llhttp-settings-scb<s::S>): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-headers-complete)

pub inline extern llhttp-settings-s-ptrraw/set-on-headers-complete(s: intptr_t, on-headers-complete: c-pointer<intptr_t>): ()
  c inline "((struct llhttp_settings_s*)#1)->on_headers_complete = (llhttp_cb)#2"

pub inline fun llhttp-settings-sp/set-on-headers-complete(s: llhttp-settings-sp, on-headers-complete: llhttp-cb): ()
  s.llhttp-settings-s-ptrraw/set-on-headers-complete(on-headers-complete)

pub inline fun llhttp-settings-sc/set-on-headers-complete(^s: llhttp-settings-sc, on-headers-complete: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-headers-complete(on-headers-complete))

pub inline fun llhttp-settings-scb/set-on-headers-complete(^s: llhttp-settings-scb<s::S>, on-headers-complete: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-headers-complete(on-headers-complete))

pub inline extern llhttp-settings-s-ptrraw/on-body(s: intptr_t): c-pointer<intptr_t>
  c inline "(intptr_t)(((struct llhttp_settings_s*)#1)->on_body)"

pub inline fun llhttp-settings-sp/on-body(s: llhttp-settings-sp): <> llhttp-data-cb
  s.cextern/c-pointer/ptr.llhttp-settings-s-ptrraw/on-body

pub inline fun llhttp-settings-sc/on-body(^s: llhttp-settings-sc): <> llhttp-data-cb
  s.with-ptr(llhttp-settings-sp/on-body)

pub inline fun llhttp-settings-scb/on-body(^s: llhttp-settings-scb<s::S>): <> llhttp-data-cb
  s.with-ptr(llhttp-settings-sp/on-body)

pub inline extern llhttp-settings-s-ptrraw/set-on-body(s: intptr_t, on-body: c-pointer<intptr_t>): ()
  c inline "((struct llhttp_settings_s*)#1)->on_body = (llhttp_data_cb)#2"

pub inline fun llhttp-settings-sp/set-on-body(s: llhttp-settings-sp, on-body: llhttp-data-cb): ()
  s.llhttp-settings-s-ptrraw/set-on-body(on-body)

pub inline fun llhttp-settings-sc/set-on-body(^s: llhttp-settings-sc, on-body: llhttp-data-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-body(on-body))

pub inline fun llhttp-settings-scb/set-on-body(^s: llhttp-settings-scb<s::S>, on-body: llhttp-data-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-body(on-body))

pub inline extern llhttp-settings-s-ptrraw/on-message-complete(s: intptr_t): c-pointer<intptr_t>
  c inline "(intptr_t)(((struct llhttp_settings_s*)#1)->on_message_complete)"

pub inline fun llhttp-settings-sp/on-message-complete(s: llhttp-settings-sp): <> llhttp-cb
  s.cextern/c-pointer/ptr.llhttp-settings-s-ptrraw/on-message-complete

pub inline fun llhttp-settings-sc/on-message-complete(^s: llhttp-settings-sc): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-message-complete)

pub inline fun llhttp-settings-scb/on-message-complete(^s: llhttp-settings-scb<s::S>): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-message-complete)

pub inline extern llhttp-settings-s-ptrraw/set-on-message-complete(s: intptr_t, on-message-complete: c-pointer<intptr_t>): ()
  c inline "((struct llhttp_settings_s*)#1)->on_message_complete = (llhttp_cb)#2"

pub inline fun llhttp-settings-sp/set-on-message-complete(s: llhttp-settings-sp, on-message-complete: llhttp-cb): ()
  s.llhttp-settings-s-ptrraw/set-on-message-complete(on-message-complete)

pub inline fun llhttp-settings-sc/set-on-message-complete(^s: llhttp-settings-sc, on-message-complete: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-message-complete(on-message-complete))

pub inline fun llhttp-settings-scb/set-on-message-complete(^s: llhttp-settings-scb<s::S>, on-message-complete: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-message-complete(on-message-complete))

pub inline extern llhttp-settings-s-ptrraw/on-url-complete(s: intptr_t): c-pointer<intptr_t>
  c inline "(intptr_t)(((struct llhttp_settings_s*)#1)->on_url_complete)"

pub inline fun llhttp-settings-sp/on-url-complete(s: llhttp-settings-sp): <> llhttp-cb
  s.cextern/c-pointer/ptr.llhttp-settings-s-ptrraw/on-url-complete

pub inline fun llhttp-settings-sc/on-url-complete(^s: llhttp-settings-sc): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-url-complete)

pub inline fun llhttp-settings-scb/on-url-complete(^s: llhttp-settings-scb<s::S>): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-url-complete)

pub inline extern llhttp-settings-s-ptrraw/set-on-url-complete(s: intptr_t, on-url-complete: c-pointer<intptr_t>): ()
  c inline "((struct llhttp_settings_s*)#1)->on_url_complete = (llhttp_cb)#2"

pub inline fun llhttp-settings-sp/set-on-url-complete(s: llhttp-settings-sp, on-url-complete: llhttp-cb): ()
  s.llhttp-settings-s-ptrraw/set-on-url-complete(on-url-complete)

pub inline fun llhttp-settings-sc/set-on-url-complete(^s: llhttp-settings-sc, on-url-complete: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-url-complete(on-url-complete))

pub inline fun llhttp-settings-scb/set-on-url-complete(^s: llhttp-settings-scb<s::S>, on-url-complete: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-url-complete(on-url-complete))

pub inline extern llhttp-settings-s-ptrraw/on-status-complete(s: intptr_t): c-pointer<intptr_t>
  c inline "(intptr_t)(((struct llhttp_settings_s*)#1)->on_status_complete)"

pub inline fun llhttp-settings-sp/on-status-complete(s: llhttp-settings-sp): <> llhttp-cb
  s.cextern/c-pointer/ptr.llhttp-settings-s-ptrraw/on-status-complete

pub inline fun llhttp-settings-sc/on-status-complete(^s: llhttp-settings-sc): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-status-complete)

pub inline fun llhttp-settings-scb/on-status-complete(^s: llhttp-settings-scb<s::S>): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-status-complete)

pub inline extern llhttp-settings-s-ptrraw/set-on-status-complete(s: intptr_t, on-status-complete: c-pointer<intptr_t>): ()
  c inline "((struct llhttp_settings_s*)#1)->on_status_complete = (llhttp_cb)#2"

pub inline fun llhttp-settings-sp/set-on-status-complete(s: llhttp-settings-sp, on-status-complete: llhttp-cb): ()
  s.llhttp-settings-s-ptrraw/set-on-status-complete(on-status-complete)

pub inline fun llhttp-settings-sc/set-on-status-complete(^s: llhttp-settings-sc, on-status-complete: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-status-complete(on-status-complete))

pub inline fun llhttp-settings-scb/set-on-status-complete(^s: llhttp-settings-scb<s::S>, on-status-complete: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-status-complete(on-status-complete))

pub inline extern llhttp-settings-s-ptrraw/on-method-complete(s: intptr_t): c-pointer<intptr_t>
  c inline "(intptr_t)(((struct llhttp_settings_s*)#1)->on_method_complete)"

pub inline fun llhttp-settings-sp/on-method-complete(s: llhttp-settings-sp): <> llhttp-cb
  s.cextern/c-pointer/ptr.llhttp-settings-s-ptrraw/on-method-complete

pub inline fun llhttp-settings-sc/on-method-complete(^s: llhttp-settings-sc): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-method-complete)

pub inline fun llhttp-settings-scb/on-method-complete(^s: llhttp-settings-scb<s::S>): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-method-complete)

pub inline extern llhttp-settings-s-ptrraw/set-on-method-complete(s: intptr_t, on-method-complete: c-pointer<intptr_t>): ()
  c inline "((struct llhttp_settings_s*)#1)->on_method_complete = (llhttp_cb)#2"

pub inline fun llhttp-settings-sp/set-on-method-complete(s: llhttp-settings-sp, on-method-complete: llhttp-cb): ()
  s.llhttp-settings-s-ptrraw/set-on-method-complete(on-method-complete)

pub inline fun llhttp-settings-sc/set-on-method-complete(^s: llhttp-settings-sc, on-method-complete: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-method-complete(on-method-complete))

pub inline fun llhttp-settings-scb/set-on-method-complete(^s: llhttp-settings-scb<s::S>, on-method-complete: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-method-complete(on-method-complete))

pub inline extern llhttp-settings-s-ptrraw/on-version-complete(s: intptr_t): c-pointer<intptr_t>
  c inline "(intptr_t)(((struct llhttp_settings_s*)#1)->on_version_complete)"

pub inline fun llhttp-settings-sp/on-version-complete(s: llhttp-settings-sp): <> llhttp-cb
  s.cextern/c-pointer/ptr.llhttp-settings-s-ptrraw/on-version-complete

pub inline fun llhttp-settings-sc/on-version-complete(^s: llhttp-settings-sc): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-version-complete)

pub inline fun llhttp-settings-scb/on-version-complete(^s: llhttp-settings-scb<s::S>): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-version-complete)

pub inline extern llhttp-settings-s-ptrraw/set-on-version-complete(s: intptr_t, on-version-complete: c-pointer<intptr_t>): ()
  c inline "((struct llhttp_settings_s*)#1)->on_version_complete = (llhttp_cb)#2"

pub inline fun llhttp-settings-sp/set-on-version-complete(s: llhttp-settings-sp, on-version-complete: llhttp-cb): ()
  s.llhttp-settings-s-ptrraw/set-on-version-complete(on-version-complete)

pub inline fun llhttp-settings-sc/set-on-version-complete(^s: llhttp-settings-sc, on-version-complete: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-version-complete(on-version-complete))

pub inline fun llhttp-settings-scb/set-on-version-complete(^s: llhttp-settings-scb<s::S>, on-version-complete: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-version-complete(on-version-complete))

pub inline extern llhttp-settings-s-ptrraw/on-header-field-complete(s: intptr_t): c-pointer<intptr_t>
  c inline "(intptr_t)(((struct llhttp_settings_s*)#1)->on_header_field_complete)"

pub inline fun llhttp-settings-sp/on-header-field-complete(s: llhttp-settings-sp): <> llhttp-cb
  s.cextern/c-pointer/ptr.llhttp-settings-s-ptrraw/on-header-field-complete

pub inline fun llhttp-settings-sc/on-header-field-complete(^s: llhttp-settings-sc): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-header-field-complete)

pub inline fun llhttp-settings-scb/on-header-field-complete(^s: llhttp-settings-scb<s::S>): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-header-field-complete)

pub inline extern llhttp-settings-s-ptrraw/set-on-header-field-complete(s: intptr_t, on-header-field-complete: c-pointer<intptr_t>): ()
  c inline "((struct llhttp_settings_s*)#1)->on_header_field_complete = (llhttp_cb)#2"

pub inline fun llhttp-settings-sp/set-on-header-field-complete(s: llhttp-settings-sp, on-header-field-complete: llhttp-cb): ()
  s.llhttp-settings-s-ptrraw/set-on-header-field-complete(on-header-field-complete)

pub inline fun llhttp-settings-sc/set-on-header-field-complete(^s: llhttp-settings-sc, on-header-field-complete: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-header-field-complete(on-header-field-complete))

pub inline fun llhttp-settings-scb/set-on-header-field-complete(^s: llhttp-settings-scb<s::S>, on-header-field-complete: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-header-field-complete(on-header-field-complete))

pub inline extern llhttp-settings-s-ptrraw/on-header-value-complete(s: intptr_t): c-pointer<intptr_t>
  c inline "(intptr_t)(((struct llhttp_settings_s*)#1)->on_header_value_complete)"

pub inline fun llhttp-settings-sp/on-header-value-complete(s: llhttp-settings-sp): <> llhttp-cb
  s.cextern/c-pointer/ptr.llhttp-settings-s-ptrraw/on-header-value-complete

pub inline fun llhttp-settings-sc/on-header-value-complete(^s: llhttp-settings-sc): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-header-value-complete)

pub inline fun llhttp-settings-scb/on-header-value-complete(^s: llhttp-settings-scb<s::S>): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-header-value-complete)

pub inline extern llhttp-settings-s-ptrraw/set-on-header-value-complete(s: intptr_t, on-header-value-complete: c-pointer<intptr_t>): ()
  c inline "((struct llhttp_settings_s*)#1)->on_header_value_complete = (llhttp_cb)#2"

pub inline fun llhttp-settings-sp/set-on-header-value-complete(s: llhttp-settings-sp, on-header-value-complete: llhttp-cb): ()
  s.llhttp-settings-s-ptrraw/set-on-header-value-complete(on-header-value-complete)

pub inline fun llhttp-settings-sc/set-on-header-value-complete(^s: llhttp-settings-sc, on-header-value-complete: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-header-value-complete(on-header-value-complete))

pub inline fun llhttp-settings-scb/set-on-header-value-complete(^s: llhttp-settings-scb<s::S>, on-header-value-complete: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-header-value-complete(on-header-value-complete))

pub inline extern llhttp-settings-s-ptrraw/on-chunk-extension-name-complete(s: intptr_t): c-pointer<intptr_t>
  c inline "(intptr_t)(((struct llhttp_settings_s*)#1)->on_chunk_extension_name_complete)"

pub inline fun llhttp-settings-sp/on-chunk-extension-name-complete(s: llhttp-settings-sp): <> llhttp-cb
  s.cextern/c-pointer/ptr.llhttp-settings-s-ptrraw/on-chunk-extension-name-complete

pub inline fun llhttp-settings-sc/on-chunk-extension-name-complete(^s: llhttp-settings-sc): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-chunk-extension-name-complete)

pub inline fun llhttp-settings-scb/on-chunk-extension-name-complete(^s: llhttp-settings-scb<s::S>): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-chunk-extension-name-complete)

pub inline extern llhttp-settings-s-ptrraw/set-on-chunk-extension-name-complete(s: intptr_t, on-chunk-extension-name-complete: c-pointer<intptr_t>): ()
  c inline "((struct llhttp_settings_s*)#1)->on_chunk_extension_name_complete = (llhttp_cb)#2"

pub inline fun llhttp-settings-sp/set-on-chunk-extension-name-complete(s: llhttp-settings-sp, on-chunk-extension-name-complete: llhttp-cb): ()
  s.llhttp-settings-s-ptrraw/set-on-chunk-extension-name-complete(on-chunk-extension-name-complete)

pub inline fun llhttp-settings-sc/set-on-chunk-extension-name-complete(^s: llhttp-settings-sc, on-chunk-extension-name-complete: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-chunk-extension-name-complete(on-chunk-extension-name-complete))

pub inline fun llhttp-settings-scb/set-on-chunk-extension-name-complete(^s: llhttp-settings-scb<s::S>, on-chunk-extension-name-complete: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-chunk-extension-name-complete(on-chunk-extension-name-complete))

pub inline extern llhttp-settings-s-ptrraw/on-chunk-extension-value-complete(s: intptr_t): c-pointer<intptr_t>
  c inline "(intptr_t)(((struct llhttp_settings_s*)#1)->on_chunk_extension_value_complete)"

pub inline fun llhttp-settings-sp/on-chunk-extension-value-complete(s: llhttp-settings-sp): <> llhttp-cb
  s.cextern/c-pointer/ptr.llhttp-settings-s-ptrraw/on-chunk-extension-value-complete

pub inline fun llhttp-settings-sc/on-chunk-extension-value-complete(^s: llhttp-settings-sc): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-chunk-extension-value-complete)

pub inline fun llhttp-settings-scb/on-chunk-extension-value-complete(^s: llhttp-settings-scb<s::S>): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-chunk-extension-value-complete)

pub inline extern llhttp-settings-s-ptrraw/set-on-chunk-extension-value-complete(s: intptr_t, on-chunk-extension-value-complete: c-pointer<intptr_t>): ()
  c inline "((struct llhttp_settings_s*)#1)->on_chunk_extension_value_complete = (llhttp_cb)#2"

pub inline fun llhttp-settings-sp/set-on-chunk-extension-value-complete(s: llhttp-settings-sp, on-chunk-extension-value-complete: llhttp-cb): ()
  s.llhttp-settings-s-ptrraw/set-on-chunk-extension-value-complete(on-chunk-extension-value-complete)

pub inline fun llhttp-settings-sc/set-on-chunk-extension-value-complete(^s: llhttp-settings-sc, on-chunk-extension-value-complete: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-chunk-extension-value-complete(on-chunk-extension-value-complete))

pub inline fun llhttp-settings-scb/set-on-chunk-extension-value-complete(^s: llhttp-settings-scb<s::S>, on-chunk-extension-value-complete: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-chunk-extension-value-complete(on-chunk-extension-value-complete))

pub inline extern llhttp-settings-s-ptrraw/on-chunk-header(s: intptr_t): c-pointer<intptr_t>
  c inline "(intptr_t)(((struct llhttp_settings_s*)#1)->on_chunk_header)"

pub inline fun llhttp-settings-sp/on-chunk-header(s: llhttp-settings-sp): <> llhttp-cb
  s.cextern/c-pointer/ptr.llhttp-settings-s-ptrraw/on-chunk-header

pub inline fun llhttp-settings-sc/on-chunk-header(^s: llhttp-settings-sc): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-chunk-header)

pub inline fun llhttp-settings-scb/on-chunk-header(^s: llhttp-settings-scb<s::S>): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-chunk-header)

pub inline extern llhttp-settings-s-ptrraw/set-on-chunk-header(s: intptr_t, on-chunk-header: c-pointer<intptr_t>): ()
  c inline "((struct llhttp_settings_s*)#1)->on_chunk_header = (llhttp_cb)#2"

pub inline fun llhttp-settings-sp/set-on-chunk-header(s: llhttp-settings-sp, on-chunk-header: llhttp-cb): ()
  s.llhttp-settings-s-ptrraw/set-on-chunk-header(on-chunk-header)

pub inline fun llhttp-settings-sc/set-on-chunk-header(^s: llhttp-settings-sc, on-chunk-header: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-chunk-header(on-chunk-header))

pub inline fun llhttp-settings-scb/set-on-chunk-header(^s: llhttp-settings-scb<s::S>, on-chunk-header: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-chunk-header(on-chunk-header))

pub inline extern llhttp-settings-s-ptrraw/on-chunk-complete(s: intptr_t): c-pointer<intptr_t>
  c inline "(intptr_t)(((struct llhttp_settings_s*)#1)->on_chunk_complete)"

pub inline fun llhttp-settings-sp/on-chunk-complete(s: llhttp-settings-sp): <> llhttp-cb
  s.cextern/c-pointer/ptr.llhttp-settings-s-ptrraw/on-chunk-complete

pub inline fun llhttp-settings-sc/on-chunk-complete(^s: llhttp-settings-sc): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-chunk-complete)

pub inline fun llhttp-settings-scb/on-chunk-complete(^s: llhttp-settings-scb<s::S>): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-chunk-complete)

pub inline extern llhttp-settings-s-ptrraw/set-on-chunk-complete(s: intptr_t, on-chunk-complete: c-pointer<intptr_t>): ()
  c inline "((struct llhttp_settings_s*)#1)->on_chunk_complete = (llhttp_cb)#2"

pub inline fun llhttp-settings-sp/set-on-chunk-complete(s: llhttp-settings-sp, on-chunk-complete: llhttp-cb): ()
  s.llhttp-settings-s-ptrraw/set-on-chunk-complete(on-chunk-complete)

pub inline fun llhttp-settings-sc/set-on-chunk-complete(^s: llhttp-settings-sc, on-chunk-complete: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-chunk-complete(on-chunk-complete))

pub inline fun llhttp-settings-scb/set-on-chunk-complete(^s: llhttp-settings-scb<s::S>, on-chunk-complete: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-chunk-complete(on-chunk-complete))

pub inline extern llhttp-settings-s-ptrraw/on-reset(s: intptr_t): c-pointer<intptr_t>
  c inline "(intptr_t)(((struct llhttp_settings_s*)#1)->on_reset)"

pub inline fun llhttp-settings-sp/on-reset(s: llhttp-settings-sp): <> llhttp-cb
  s.cextern/c-pointer/ptr.llhttp-settings-s-ptrraw/on-reset

pub inline fun llhttp-settings-sc/on-reset(^s: llhttp-settings-sc): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-reset)

pub inline fun llhttp-settings-scb/on-reset(^s: llhttp-settings-scb<s::S>): <> llhttp-cb
  s.with-ptr(llhttp-settings-sp/on-reset)

pub inline extern llhttp-settings-s-ptrraw/set-on-reset(s: intptr_t, on-reset: c-pointer<intptr_t>): ()
  c inline "((struct llhttp_settings_s*)#1)->on_reset = (llhttp_cb)#2"

pub inline fun llhttp-settings-sp/set-on-reset(s: llhttp-settings-sp, on-reset: llhttp-cb): ()
  s.llhttp-settings-s-ptrraw/set-on-reset(on-reset)

pub inline fun llhttp-settings-sc/set-on-reset(^s: llhttp-settings-sc, on-reset: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-reset(on-reset))

pub inline fun llhttp-settings-scb/set-on-reset(^s: llhttp-settings-scb<s::S>, on-reset: llhttp-cb): ()
  s.with-ptr(fn(kk-internal-ptr) kk-internal-ptr.llhttp-settings-sp/set-on-reset(on-reset))

alias llhttp-cb = c-pointer<intptr_t>
alias llhttp-cbfn = ((c-pointer<llhttp--internal-s-c>) -> int)
alias llhttp-t = llhttp--internal-s-c
pub struct llhttp--internal-s
pub type llhttp--internal-s-c
pub alias llhttp--internal-sp = c-pointer<llhttp--internal-s-c>
pub alias llhttp--internal-sc = owned-c<llhttp--internal-s-c>
pub alias llhttp--internal-scb<s::S> = borrowed-c<s,llhttp--internal-s-c>
pub alias llhttp--internal-sca = owned-c<c-array<llhttp--internal-s-c>>

alias llhttp-data-cb = c-pointer<intptr_t>
alias llhttp-data-cbfn = ((c-pointer<llhttp--internal-s-c>, c-pointer<int>, int) -> int)
alias llhttp-settings-t = llhttp-settings-s-c
alias koka-llhttp-settings-t = llhttp-settings-s
pub val knull1: int = 0

